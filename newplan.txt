# Santo Portfolio — Animated V2 (Final Ordered Build Script)

**Goal:** Minimal but premium portfolio with a cinematic **Aurora + Starfield** background, a hero title that fades in and fades out on scroll, and tasteful micro‑interactions. Built on **Next.js 14 + Tailwind + Framer Motion**. No 3D engines.

> **Rules**
> • Don’t alter existing project structure beyond what’s listed.
> • No extra libraries unless explicitly stated.
> • Respect `prefers-reduced-motion` and a global `ANIMATIONS_ENABLED` feature flag.
> • Keep CLS = 0.00, desktop LCP < 2.5s.

---

## STEP 0 — Safety Net & Flags (One‑Time) ✅

**Prompt:**

> Create branch `feat/animation-pass-1`. Add `app/_ui/hooks/useReducedMotion.ts` using `matchMedia('(prefers-reduced-motion: reduce)')`. Add `ANIMATIONS_ENABLED` flag (env or constant). Export `MOTION_DISABLED` that resolves true if reduced motion OR flag is off. Confirm by logging once in dev.

**Acceptance:** Branch exists; hook + flags compile; no behavior changes yet.

---

## STEP 1 — Background Scaffold & Mount ✅

**Prompt:**

> Create folder `app/_ui/Background/` with files: `AuroraLayer.tsx`, `StarfieldLayer.tsx`, `index.tsx`.
> In `index.tsx`, export `<Background />` that renders a fixed, full‑viewport stacking context with `className="fixed inset-0 -z-10 pointer-events-none overflow-hidden"`, placing `<AuroraLayer />` beneath `<StarfieldLayer />`.
> Mount `<Background />` once in `app/layout.tsx` just inside `<body>`. Ensure no horizontal scrollbar.

**Acceptance:** Compiles; mounted; nothing visually broken.

---

## STEP 2 — AuroraLayer (CSS‑Only Cinematic Gradient) ✅

**Prompt:**

> Implement `AuroraLayer.tsx` returning a viewport‑sized wrapper with **two** absolutely‑positioned radial‑gradient layers. Animate each via CSS keyframes (30–55s loops) with slight pan/rotate. Add a super‑subtle noise overlay (image or CSS) at \~0.04 opacity to prevent banding. Colors via CSS vars:
> `--aurora-1:#00F0FF; --aurora-2:#A855F7; --aurora-3:#1E40AF;`
> Overall opacity ≤ 0.25. In reduced motion (`MOTION_DISABLED`), render static (no animation classes).

**Acceptance:** 60fps idle, no CLS, visually subtle in light/dark.

---

## STEP 3 — StarfieldLayer (Canvas + Parallax + Shooting Star) ✅

**Prompt:**

> Implement `StarfieldLayer.tsx` as a full‑screen `<canvas>` aware of devicePixelRatio. Create a single rAF loop that:
> • Maintains 3 depth layers of stars with tiny drift; wraps at edges.
> • Applies parallax from scroll and mouse: depth0 static, depth1 \~0.03, depth2 \~0.06.
> • Spawns one subtle shooting star every 20–35s (randomized), with fade.
> • Pauses rendering when `document.hidden` is true. If `MOTION_DISABLED`, render one static frame, then stop rAF.
> Desktop star counts ≈ \[80,50,30], mobile halves. Star radius 0.5–1.2px, alpha 0.2–0.8.

**Acceptance:** CPU < 5–8% on mid‑range laptop; stable memory; 5‑minute idle test passes; no console errors.

---

## STEP 4 — Reduced Motion & Debug Flag Test ✅

**Prompt:**

> Add a dev toggle: if `NEXT_PUBLIC_DEBUG_MOTION='off'`, force `MOTION_DISABLED=true`. Verify Aurora renders static and Starfield draws a single frame (no rAF). Add a tiny unit test or runtime check to assert this path.

**Acceptance:** Manual toggle works; CI/test passes.

---

## STEP 5 — Config Knobs (Centralized) ✅

**Prompt:**

> Create `app/_ui/Background/config.ts` exporting:
> `STAR_COUNTS = { desktop:[80,50,30], mobile:[40,25,15] }`
> `PARALLAX = { depth1:0.03, depth2:0.06, mouse:0.03 }`
> `AURORA = { opacity:0.22, speedA:42000, speedB:51000 }`
> `SHOOTING = { minMs:20000, maxMs:35000, speed:1.8 }`
> Provide `reducedForMobile(width:number)` helper to pick fewer stars & slower speeds under a breakpoint. Tint 1–3% stars `#FFD580`.

**Acceptance:** Edits to `config.ts` immediately change behavior.

---

## STEP 6 — Hero Title (Fade‑In Stagger + Fade‑Out on Scroll) ✅

**Prompt:**

> Create `app/_ui/HeroTitle.tsx`:
>
> 1. Split title into characters (server‑safe) and stagger with Framer Motion from `{opacity:0,y:16,blur(4px)}` to `{opacity:1,y:0,blur(0)}` at 20–30ms per char.
> 2. Map `useScroll` to fade/move the whole title out as the user scrolls past \~45% of hero height.
> 3. Props: `title`, `subtitle`, `eyebrow?`, `bindToScroll?:true`, `parallaxHint?:true`. When `parallaxHint` is true, offset subtitle slightly opposite starfield parallax.
> 4. Respect `MOTION_DISABLED` → render instantly without stagger or scroll coupling.

**Acceptance:** Cinematic entrance; clean exit; no jank; A11y ≥ 95.

---

## STEP 7 — Global Motion Tokens ✅

**Prompt:**

> Add `app/_ui/motion.ts` with reusable variants (`fadeInUp`, `fadeIn`, `scaleIn`, `reveal`) and tokens `{dur:{fast:0.25,base:0.45,slow:0.8}, ease:{out:'easeOut', inout:'easeInOut'}}`. Every variant checks `MOTION_DISABLED` to return no‑motion states.

**Acceptance:** Variants compile and are shared.

---

## STEP 8 — Section Scaffold ✅

**Prompt:**

> Create `app/_ui/Section.tsx` wrapper handling max‑width, vertical rhythm, and `motion.h2` heading using `reveal`. Create main sections with IDs: `Hero`, `About`, `Projects`, `Experience`, `Contact`.

**Acceptance:** Layout stable; IDs present.

---

## STEP 9 — Scroll‑Triggered Reveals (Once) ✅

**Prompt:**

> Apply `whileInView` reveals using Intersection Observer via Framer's `viewport={{ once:true, margin:'0px 0px -10% 0px' }}`. No scroll‑linked animations per tick; only on entry. Respect reduced motion by rendering visible immediately.

**Acceptance:** Each block reveals once; scroll remains smooth.

---

## STEP 10 — ProjectCard Micro‑Interactions ✅

**Prompt:**

> Build `ProjectCard` with hover lift `y:-4`, soft shadow, image fade‑in mask, and tag chips sliding up on hover. Keyboard focus mirrors hover. Reduced motion → no lift, shadow only. Add `aria-describedby` tooltips if used.

**Acceptance:** Best Practices ≥ 95; keyboard flow correct.

---

## STEP 11 — Sticky Nav + ScrollSpy + Progress Bar ✅

**Prompt:**

> Implement a sticky top nav that becomes translucent on scroll. Use `IntersectionObserver` with rootMargin `-40% 0px -50% 0px` to highlight active section. Add a very thin top progress bar bound to `scrollYProgress`. Hide bar in reduced motion.

**Acceptance:** Accurate section highlighting; mobile friendly; no flicker.

---

## STEP 12 — Ambient Parallax Accents (Optional)

**Prompt:**

> Add 2–3 decorative SVGs per long section with **tiny** counter‑scroll movement (2–6px per 100px). Clamp ranges; opacity ≤ 0.1; disable on mobile/reduced motion.

**Acceptance:** Depth without distraction; no overlaps.

---

## STEP 13 — Performance Pass

**Prompt:**

> Preload hero fonts via `next/font` and critical hero media; ensure `<Image>` uses correct `sizes`. Lazy‑load offscreen sections. Memoize heavy components. Avoid unnecessary re‑renders; use `useMemo`/`useCallback` where needed. Use `will-change` sparingly.

**Acceptance:** Lighthouse Perf ≥ 95 desktop, ≥ 85 mobile; no long tasks > 200ms.

---

## STEP 14 — Theming Polish

**Prompt:**

> Use existing palette; bump contrast slightly. Add glass effect on cards (`backdrop-blur-sm`, translucent bg). Provide CSS vars for motion durations/opacities. Add dev‑only `ThemeControl` to cycle curated palettes (default teal‑purple‑deep blue).

**Acceptance:** Cohesive visuals; readable in both themes.

---

## STEP 15 — QA Checklist (Copy into PR)

* [ ] Global reduced motion respected
* [ ] Hero fade‑out starts \~45% hero height
* [ ] Background causes no layout shift
* [ ] Reveals trigger once, not on back‑scroll
* [ ] Cards: keyboard + SR friendly
* [ ] Perf targets met (desktop ≥95 / mobile ≥85)
* [ ] Feature flag disables all motion cleanly

---

## ROLLOUT

1. Steps 0–3 → commit.
2. Steps 4–6 → commit.
3. Steps 7–11 → commit.
4. Steps 12–14 → commit.
5. QA checklist → finalize PR.

**Branch:** `feat/animation-pass-1`
**PR:** "Animation Pass 1 — Aurora+Starfield BG, Hero, Micro‑Interactions"
