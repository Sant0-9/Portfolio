# Santo Portfolio — Animated V2 (Final Ordered Build Script)

**Goal:** Minimal but premium portfolio with a cinematic **Aurora + Starfield** background, a hero title that fades in and fades out on scroll, and tasteful micro‑interactions. Built on **Next.js 14 + Tailwind + Framer Motion**. No 3D engines.

> **Rules**
> • Don’t alter existing project structure beyond what’s listed.
> • No extra libraries unless explicitly stated.
> • Respect `prefers-reduced-motion` and a global `ANIMATIONS_ENABLED` feature flag.
> • Keep CLS = 0.00, desktop LCP < 2.5s.

---

## STEP 0 — Safety Net & Flags (One‑Time)

**Prompt:**

> Create branch `feat/animation-pass-1`. Add `app/_ui/hooks/useReducedMotion.ts` using `matchMedia('(prefers-reduced-motion: reduce)')`. Add `ANIMATIONS_ENABLED` flag (env or constant). Export `MOTION_DISABLED` that resolves true if reduced motion OR flag is off. Confirm by logging once in dev.

**Acceptance:** Branch exists; hook + flags compile; no behavior changes yet.

---

## STEP 1 — Background Scaffold & Mount

**Prompt:**

> Create folder `app/_ui/Background/` with files: `AuroraLayer.tsx`, `StarfieldLayer.tsx`, `index.tsx`.
> In `index.tsx`, export `<Background />` that renders a fixed, full‑viewport stacking context with `className="fixed inset-0 -z-10 pointer-events-none overflow-hidden"`, placing `<AuroraLayer />` beneath `<StarfieldLayer />`.
> Mount `<Background />` once in `app/layout.tsx` just inside `<body>`. Ensure no horizontal scrollbar.

**Acceptance:** Compiles; mounted; nothing visually broken.

---

## STEP 2 — AuroraLayer (CSS‑Only Cinematic Gradient)

**Prompt:**

> Implement `AuroraLayer.tsx` returning a viewport‑sized wrapper with **two** absolutely‑positioned radial‑gradient layers. Animate each via CSS keyframes (30–55s loops) with slight pan/rotate. Add a super‑subtle noise overlay (image or CSS) at \~0.04 opacity to prevent banding. Colors via CSS vars:
> `--aurora-1:#00F0FF; --aurora-2:#A855F7; --aurora-3:#1E40AF;`
> Overall opacity ≤ 0.25. In reduced motion (`MOTION_DISABLED`), render static (no animation classes).

**Acceptance:** 60fps idle, no CLS, visually subtle in light/dark.

---

## STEP 3 — StarfieldLayer (Canvas + Parallax + Shooting Star)

**Prompt:**

> Implement `StarfieldLayer.tsx` as a full‑screen `<canvas>` aware of devicePixelRatio. Create a single rAF loop that:
> • Maintains 3 depth layers of stars with tiny drift; wraps at edges.
> • Applies parallax from scroll and mouse: depth0 static, depth1 \~0.03, depth2 \~0.06.
> • Spawns one subtle shooting star every 20–35s (randomized), with fade.
> • Pauses rendering when `document.hidden` is true. If `MOTION_DISABLED`, render one static frame, then stop rAF.
> Desktop star counts ≈ \[80,50,30], mobile halves. Star radius 0.5–1.2px, alpha 0.2–0.8.

**Acceptance:** CPU < 5–8% on mid‑range laptop; stable memory; 5‑minute idle test passes; no console errors.

---

## STEP 4 — Reduced Motion & Debug Flag Test

**Prompt:**

> Add a dev toggle: if `NEXT_PUBLIC_DEBUG_MOTION='off'`, force `MOTION_DISABLED=true`. Verify Aurora renders static and Starfield draws a single frame (no rAF). Add a tiny unit test or runtime check to assert this path.

**Acceptance:** Manual toggle works; CI/test passes.

---

## STEP 5 — Config Knobs (Centralized)

**Prompt:**

> Create `app/_ui/Background/config.ts` exporting:
> `STAR_COUNTS = { desktop:[80,50,30], mobile:[40,25,15] }`
> `PARALLAX = { depth1:0.03, depth2:0.06, mouse:0.03 }`
> `AURORA = { opacity:0.22, speedA:42000, speedB:51000 }`
> `SHOOTING = { minMs:20000, maxMs:35000, speed:1.8 }`
> Provide `reducedForMobile(width:number)` helper to pick fewer stars & slower speeds under a breakpoint. Tint 1–3% stars `#FFD580`.

**Acceptance:** Edits to `config.ts` immediately change behavior.

---

## STEP 6 — Hero Title (Fade‑In Stagger + Fade‑Out on Scroll)

**Prompt:**

> Create `app/_ui/HeroTitle.tsx`:
>
> 1. Split title into characters (server‑safe) and stagger with Framer Motion from `{opacity:0,y:16,blur(4px)}` to `{opacity:1,y:0,blur(0)}` at 20–30ms per char.
> 2. Map `useScroll` to fade/move the whole title out as the user scrolls past \~45% of hero height.
> 3. Props: `title`, `subtitle`, `eyebrow?`, `bindToScroll?:true`, `parallaxHint?:true`. When `parallaxHint` is true, offset subtitle slightly opposite starfield parallax.
> 4. Respect `MOTION_DISABLED` → render instantly without stagger or scroll coupling.

**Acceptance:** Cinematic entrance; clean exit; no jank; A11y ≥ 95.

---

## STEP 7 — Global Motion Tokens

**Prompt:**

> Add `app/_ui/motion.ts` with reusable variants (`fadeInUp`, `fadeIn`, `scaleIn`, `reveal`) and tokens `{dur:{fast:0.25,base:0.45,slow:0.8}, ease:{out:'easeOut', inout:'easeInOut'}}`. Every variant checks `MOTION_DISABLED` to return no‑motion states.

**Acceptance:** Variants compile and are shared.

---

## STEP 8 — Section Scaffold

**Prompt:**

> Create `app/_ui/Section.tsx` wrapper handling max‑width, vertical rhythm, and `motion.h2` heading using `reveal`. Create main sections with IDs: `Hero`, `About`, `Projects`, `Experience`, `Contact`.

**Acceptance:** Layout stable; IDs present.

---

## STEP 9 — Scroll‑Triggered Reveals (Once)

**Prompt:**

> Apply `whileInView` reveals using Intersection Observer via Framer’s `viewport={{ once:true, margin:'0px 0px -10% 0px' }}`. No scroll‑linked animations per tick; only on entry. Respect reduced motion by rendering visible immediately.

**Acceptance:** Each block reveals once; scroll remains smooth.

---

## STEP 10 — ProjectCard Micro‑Interactions

**Prompt:**

> Build `ProjectCard` with hover lift `y:-4`, soft shadow, image fade‑in mask, and tag chips sliding up on hover. Keyboard focus mirrors hover. Reduced motion → no lift, shadow only. Add `aria-describedby` tooltips if used.

**Acceptance:** Best Practices ≥ 95; keyboard flow correct.

---

## STEP 11 — Sticky Nav + ScrollSpy + Progress Bar

**Prompt:**

> Implement a sticky top nav that becomes translucent on scroll. Use `IntersectionObserver` with rootMargin `-40% 0px -50% 0px` to highlight active section. Add a very thin top progress bar bound to `scrollYProgress`. Hide bar in reduced motion.

**Acceptance:** Accurate section highlighting; mobile friendly; no flicker.

---

## STEP 12 — Ambient Parallax Accents (Optional)

**Prompt:**

> Add 2–3 decorative SVGs per long section with **tiny** counter‑scroll movement (2–6px per 100px). Clamp ranges; opacity ≤ 0.1; disable on mobile/reduced motion.

**Acceptance:** Depth without distraction; no overlaps.

---

## STEP 13 — Performance Pass

**Prompt:**

> Preload hero fonts via `next/font` and critical hero media; ensure `<Image>` uses correct `sizes`. Lazy‑load offscreen sections. Memoize heavy components. Avoid unnecessary re‑renders; use `useMemo`/`useCallback` where needed. Use `will-change` sparingly.

**Acceptance:** Lighthouse Perf ≥ 95 desktop, ≥ 85 mobile; no long tasks > 200ms.

---

## STEP 14 — Theming Polish

**Prompt:**

> Use existing palette; bump contrast slightly. Add glass effect on cards (`backdrop-blur-sm`, translucent bg). Provide CSS vars for motion durations/opacities. Add dev‑only `ThemeControl` to cycle curated palettes (default teal‑purple‑deep blue).

**Acceptance:** Cohesive visuals; readable in both themes.

---

## STEP 15 — QA Checklist (Copy into PR)

* [ ] Global reduced motion respected
* [ ] Hero fade‑out starts \~45% hero height
* [ ] Background causes no layout shift
* [ ] Reveals trigger once, not on back‑scroll
* [ ] Cards: keyboard + SR friendly
* [ ] Perf targets met (desktop ≥95 / mobile ≥85)
* [ ] Feature flag disables all motion cleanly

---

## ROLLOUT

1. Steps 0–3 → commit.
2. Steps 4–6 → commit.
3. Steps 7–11 → commit.
4. Steps 12–14 → commit.
5. QA checklist → finalize PR.

**Branch:** `feat/animation-pass-1`
**PR:** "Animation Pass 1 — Aurora+Starfield BG, Hero, Micro‑Interactions"

---

# Phase 2 — About & Projects (Design + Copy‑Paste Prompts)

> Build these after Phase 1. Keep animations subtle and performant. Everything respects `MOTION_DISABLED` and `useReducedMotion()`.

## STEP 16 — About Me (Sticky Bio Card + Mini Timeline + Stats)

**Concept:** Left column sticky **Bio Card**; right column scrolls through 2–3 content blocks (values, interests, now/next). Light micro‑parallax decoration.

**Prompt:**

> Files:
> • `app/_ui/about/BioCard.tsx`
> • `app/_ui/about/TimelineMini.tsx`
> • `app/_ui/about/Stats.tsx`
> • `app/(site)/about/SectionAbout.tsx` (or wherever your sections live)
>
> Implement `SectionAbout` as a 12‑col responsive grid.
> **Left (lg: col‑4)**: `<BioCard>` with avatar (optional), name, role, location, and 3 quick bullets. Glass card (`backdrop-blur-sm`, 6–8% white/black). On mount: `fadeInUp`. On hover: **very small** tilt (max 2deg) and glow ring using box‑shadow. Keyboard focus mirrors hover.
> **Right (lg: col‑8)**: stack of `ContentBlock`s revealed `whileInView` once. Include:
>
> 1. "What I’m about" — 3 short statements (Builder / Research / Systems).
> 2. `<TimelineMini>` — Now → Next → Future (3 items). The connecting line is an SVG path whose `pathLength` animates from 0 → 1 (Framer `motion.path`).
> 3. `<Stats>` — 3 counters: Years coding, Projects shipped, Key techs. Counter animates from 0 using a **rAF‑based number tween** when in view (no external libs). Provide reduced‑motion fallback to static numbers.
>
> Add **ambient** SVG dots/blobs with opacity ≤ 0.06 that move 2–4px per 100px scroll using `useTransform(scrollY)`. Disable on mobile/reduced motion.
>
> Accessibility: headings are semantic (`h2`, `h3`), no essential info conveyed by motion only.

**Acceptance:** Sticky left column on lg+, graceful stack on mobile; reveals happen once; counters stop at exact values; no layout shift; CPU remains low.

**Suggested copy (edit as needed):**

* Headline: **About Me**
* Bullets: "Full‑stack dev @ UTD • AI/agents • Clean, fast UI"
* Now/Next/Future:

  * **Now:** polishing Tripwise and LifeOS demos
  * **Next:** agentic RAG improvements + infra clean‑up
  * **Future:** scalable multi‑agent LifeOS
* Stats (examples): `2+` yrs coding • `10+` shipped projects • Core: Next.js, Node, Postgres, Python

---

## STEP 17 — Projects (Spotlight + Grid, Hover Video Previews, Modal)

**Concept:** One **Spotlight** project banner, then a responsive **grid** of cards. Cards have tasteful hover (lift + shine), optional **auto‑play muted preview** on hover/in‑view, and quick actions (Live / Code / Case Study). Tag filters enable quick narrowing without routing.

**Prompt:**

> Files:
> • `app/_ui/projects/Spotlight.tsx`
> • `app/_ui/projects/ProjectCard.tsx`
> • `app/_ui/projects/Filters.tsx`
> • `app/_ui/projects/ProjectModal.tsx`
> • `app/_data/projects.ts` (static array)
>
> Data: create `projects` array with fields: `slug`, `title`, `summary`, `tags: string[]`, `image`, `previewVideo?`, `links: {live?:string, code?:string, case?:string}`, `status?: 'wip'|'live'`, `highlights?: string[]`.
>
> `Spotlight`: Wide card (16:9) with background image/video; gradient overlay; title + 2 bullets; CTA buttons. On hover/in‑view: subtle zoom (scale 1.02) and gradient **sheen** (animated diagonal light). Reduced motion → static. Keyboard focus triggers the same.
>
> `ProjectCard`:
> • Hover: lift `y:-6`, shadow‑xl, border gradient animates (2s loop).
> • If `previewVideo` exists, auto‑play muted on hover and when 80% in view; pause when out of view. Fallback to image.
> • Top‑right status dot (green live / purple wip).
> • Footer tags as pills; clicking a tag filters (via shared store or URL query).
> • Actions: Live, Code, Case Study — buttons appear with a fade/slide on hover and are reachable via keyboard.
>
> `Filters`: Row of pills (All, RAG, Next.js, Agents, Maps, etc.). Animate selected pill with spring scale 1.04. Accessible toggles (`role="tablist"`).
>
> `ProjectModal`: When a card is clicked, open a centered modal with: hero media (image/video), description, role, tech stack, 3–5 bullet highlights, and links. Animate backdrop fade + modal scale 0.98→1. Use `Dialog` semantics and focus trapping. Dismiss with `Esc`.
>
> Performance: lazy‑load videos, use `<Image>` with `sizes`, memoize cards, don’t run previews offscreen. Respect reduced motion.

**Acceptance:** Filter works instantly; hover previews smooth; keyboard users can reach every action; modal animates without jank.

**Suggested entries (edit):**

* **Tripwise** — AI travel planner (RAG + maps). Tags: `RAG`, `Maps`, `Next.js`. Links: Live (once ready), Code.
* **LifeOS** — Multi‑agent personal OS. Tags: `Agents`, `Memory`, `Next.js`.
* **Barta** — Bangla news RAG. Tags: `Bangla`, `News`, `RAG`.

---

## STEP 18 — Micro‑Polish Animations

**Prompt:**

> • Section headings: add a subtle **glow pulse** on first reveal (opacity 0→1 + text‑shadow).
> • Divider lines: draw‑in with SVG stroke animation on scroll.
> • Buttons: on hover, add 250ms underline grow animation using `background-size` trick (no layout shift).
> • Tag chips: tiny 1px inner‑glow on hover; press state scales to 0.98.

**Acceptance:** Looks premium, still subtle. Zero CLS.

---

## STEP 19 — Copy & A11y Pass

**Prompt:**

> Replace lorem with real copy (concise, outcome‑focused). Add `aria-label`s to links ("Open Tripwise Live Demo"). Ensure color contrast ≥ 4.5:1 for body text and ≥ 7:1 for headings where possible. Provide alt text for images (functional, not decorative).

**Acceptance:** Axe DevTools reports no serious issues; Lighthouse A11y ≥ 95.

---

## STEP 20 — Commits (Template)

Use these messages per step:

* step16: `feat(about): sticky bio card, mini timeline, and animated stats`
* step17: `feat(projects): spotlight hero, filtered grid, hover previews, modal`
* step18: `chore(ui): micro‑polish animations for headings, dividers, buttons, tags`
* step19: `docs(a11y): real copy + aria labels + alt text + contrast pass`

---

# Phase 3 — Pinning + Horizontal Scroll (Exactly What You Asked)

> Goal: Left **Bio Card** (with your correct name) stays pinned while the right column scrolls. When **Projects** is centered in the viewport, it becomes a **pinned section that slides horizontally** as you continue to scroll, with buttery transitions and reduced‑motion fallbacks.

## STEP 21 — Fix Name + BioCard Polish

**Prompt:**

> Update `BioCard` to show the correct name **“Shifat Islam Santo”** (not Santo Rahman). Include role, location, and 3 bullets. Ensure the component accepts `topOffset` so we can align the sticky position under the navbar height.
>
> Acceptance: Correct name; prop added; visually identical otherwise.

---

## STEP 22 — Make Left Panel Truly Sticky Until Projects

**Prompt:**

> In the **About** section, wrap the grid in a parent that spans the full About content height (so sticky can pin inside it).
>
> * Left column: `position: sticky; top: calc(var(--navH, 72px) + 16px);` with a max‑height clamp so it never overlaps the footer.
> * Right column: contains the About blocks (values, timeline, stats) with enough height to force scrolling.
> * Add a **bottom sentinel** div at the end of the About section (immediately before Projects). Sticky naturally releases when the parent ends; no JS required.
>
> Acceptance: Scrolling down keeps the left BioCard pinned; as soon as the Projects section starts, the BioCard scrolls away.

### 22b — Release Guard When Projects Enters View (defensive)

**Prompt:**

> Add an IntersectionObserver (or Framer `useInView`) watching the Projects section root element `#projects`. When `#projects` intersects the viewport (rootMargin: `0px 0px -70% 0px`), toggle a state `isProjectsActive=true` and add a class `data-released` on the sticky container. In CSS: `[data-released="true"] { position: static; }` (or `sticky` with `top:auto`), plus a 200–300ms fade/translate so the BioCard gracefully slides up and out.
>
> Reduced motion: swap the animation for an instant state change.
>
> Acceptance: Even if layout changes, the BioCard **always unpins** the moment Projects becomes active and does a clean exit.

---

## STEP 23 — Subtle Upward Drift for “What I’m About”

**Prompt:**

> Add a section‑local scroll binding using Framer’s `useScroll({ target: aboutRef, offset: ["start end","end start"] })`. Map `scrollYProgress` to a small translateY on the **right column header group** (e.g., `0 → -56px`) via `useTransform`. Apply easing `easeOut`. Respect reduced motion by disabling the transform and using simple reveal variants instead.
>
> Acceptance: As you scroll, the "What I’m About" group appears to drift **upward slightly** toward the sticky card—tasteful, not distracting.

---

## STEP 24 — Projects as a Pinned Horizontal Slider (Vertical Scroll → Horizontal Motion)

**Prompt:**

> Create `app/_ui/projects/HorizontalRail.tsx` with:
>
> 1. An outer `<section ref={railSection}>` with **tall height** that equals the total horizontal scroll distance + viewport height.
> 2. Inside it, a `sticky` container (`top: var(--navH,72px)`) that stays fixed while the section scrolls.
> 3. A `<motion.div ref={track}>` that lays out project cards **horizontally** (CSS grid with `grid-auto-flow: column` or flex row) with gaps. Measure `track.scrollWidth` and compute `totalShift = scrollWidth - viewportWidth`.
> 4. Bind `useScroll({ target: railSection, offset: ["center center","end center"] })` to start the animation **only when the section center hits the viewport center**. Map progress `0→1` to `x: 0 → -totalShift`.
> 5. On small screens or reduced motion, **disable** pinning and render a normal vertical grid with scroll‑snap.
>
> Acceptance: When Projects reaches the center of the screen, it pins and the cards slide horizontally as you continue scrolling. At the end of the section, it unpins and normal page scroll resumes.

---

## STEP 25 — Card Animations + Snap Feel

**Prompt:**

> For each card on the horizontal track:
>
> * On enter (first time in view): `fadeInUp` once with slight scale‑in (`1.00→1.03→1.00`).
> * On hover/focus: lift `y:-6`, shadow‑xl, gradient ring animates across the border (2s).
> * Add **scroll‑snap** (`snap-x snap-mandatory`) so manual track drags feel crisp on touchpads.
> * Ensure keyboard navigation moves focus **horizontally** across cards when pinned.
>
> Acceptance: Smooth entry; hover/focus parity; track feels snappy when nudged.

---

## STEP 26 — Performance + Fallbacks

**Prompt:**

> * Use `ResizeObserver` to recompute `totalShift` on viewport changes.
> * Throttle RAF work; no allocations in the loop.
> * If `MOTION_DISABLED` or width < 1024px: bypass pinning, render vertical grid, disable transform x.
> * Ensure no horizontal scrollbar appears on the page root (clip within the sticky container only).
>
> Acceptance: Desktop Lighthouse Perf ≥ 95; no jank; reduced‑motion path renders clean vertical list.

---

## STEP 27 — QA Script

* Scroll from About → Projects: BioCard stays pinned, right content drifts up; BioCard releases right before Projects.
* When Projects’ heading is dead center, the section pins and the track starts sliding horizontally.
* End of Projects: unpins correctly and page scroll continues.
* Mobile: vertical grid, no pinning; behavior still clean.
* Reduced motion: no transforms; everything readable and accessible.

## Commit

* `feat(layout): sticky about card + pinned horizontal projects rail`
